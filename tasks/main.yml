---
- name: Download binary from MatterMost website
  get_url: 
    url: https://releases.mattermost.com/{{ mattermost_version }}/mattermost-team-{{ mattermost_version }}-linux-amd64.tar.gz
    dest: /tmp/
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version == "7") or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16")

- name: Download binary from MatterMost website (using wget because get_url fails if system python is older than 2.7.5)
  command: "wget https://releases.mattermost.com/{{ mattermost_version }}/mattermost-team-{{ mattermost_version }}-linux-amd64.tar.gz"
  args:        
    chdir: /tmp/
    creates: /tmp/mattermost-team-{{ mattermost_version }}-linux-amd64.tar.gz
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version == "6") or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14")

- name: unpack mattermost archive
  unarchive: 
    src: /tmp/mattermost-team-{{ mattermost_version }}-linux-amd64.tar.gz 
    dest: /opt/
    copy: no
  args:
    creates: /opt/mattermost/bin/platform

- name: Edit /opt/mattermost/config/config.json
  lineinfile:
    dest: /opt/mattermost/config/config.json
    regexp: '"DataSource":'
    line: '        "DataSource": "{{ db_user }}:{{ db_password }}@tcp(127.0.0.1:3306)/{{ db_name }}?charset=utf8mb4,utf8",'
    backrefs: yes

- name: Edit /opt/mattermost/config/config.json
  lineinfile:
    dest: /opt/mattermost/config/config.json
    regexp: '"{{ item.key }}":'
    line: '        "{{ item.key }}": "{{ item.value }}",'
    backrefs: yes
  with_items: "{{ mattermost_config }}"
    
- name: Create mattermost user
  user: 
    name: "{{ mattermost_user }}"
    system: yes
    createhome: no        

- name: Create mattermost systemd service (Ubuntu 16.04, RHEL/CentOS 7)
  template:
    src: mattermost.service.j2
    dest: /etc/systemd/system/mattermost.service
    owner: root
    group: root
    mode: 0664
  when: (ansible_os_family  == "RedHat" and ansible_distribution_major_version == "7") or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16")  

- name: Change mattermost directory permissions
  file:
    path: /opt/mattermost
    state: directory
    owner: "{{ mattermost_user }}"
    group: "{{ mattermost_user }}"
    recurse: yes

- name: Install the latest postfix
  package: name=postfix state=latest
  
- name: Enable Mattermost service
  service:
    name: postfix
    enabled: yes
    state: started

- name: Enable Mattermost service
  service:
    name: mattermost
    enabled: yes
    state: started

 